---
import Layout from '../layouts/Layout.astro';
import { PROMPT, CARET_SYMBOL } from '../lib/constants';
---

<Layout title="Welcome to Astro.">
  <main class="min-h-screen flex flex-col p-1">
    <h1>Title</h1>

    <div id="history" class="prose"></div>

    <div class="flex gap-x-2.5 pr-5 flex-1">
      <span>{PROMPT}</span>

      <div class="flex-1 flex">
        <textarea
          name="input"
          id="input-area"
          class="outline-none focus:placeholder:opacity-100 caret-transparent"
          autofocus></textarea>

        <p id="prediction" class="absolute opacity-25"></p>
        <span
          id="caret"
          class="absolute animate-pulse font-bold text-orange-400 opacity-50"
          >{CARET_SYMBOL}</span
        >
      </div>
    </div>
  </main>
</Layout>

<script>
  import { CARET_SYMBOL, COMMANDS, PROMPT } from '../lib/constants';
  import { clearTextArea } from '../lib/utils';

  const input = document.getElementById('input-area') as HTMLTextAreaElement;
  const history = document.getElementById('history') as HTMLDivElement;
  const predictionBox = document.getElementById(
    'prediction',
  ) as HTMLParagraphElement;
  const caret = document.getElementById('caret') as HTMLSpanElement;

  function predictCommand(value: string) {
    return COMMANDS.find((command) => command.startsWith(value)) ?? '';
  }

  function executeCommand(command: string) {
    switch (command) {
      case 'whois':
        return `Hey, I'm Hubert! üëãüèª
			I'm a software developer, CS student, who builds interesting things on the web, like this one.`;
      case 'video':
        return 'I am a video game enthusiast, I play a lot of <a href="https://www.ubisoft.com/en-us/game/rainbow-six/siege">Rainbow Six Siege</a> and <a href="https://www.ubisoft.com/en-us/game/for-honor">For Honor</a>.';
      case 'projects':
        return 'I am a software engineer, currently working at <a href="https://www.ubisoft.com/en-us/">Ubisoft</a>.';
      case 'social':
        return 'I am a software engineer, currently working at <a href="https://www.ubisoft.com/en-us/">Ubisoft</a>.';
      case 'secret':
        return 'I am a software engineer, currently working at <a href="https://www.ubisoft.com/en-us/">Ubisoft</a>.';
      case '':
        return '';
      default:
        return `zsh: command not found: ${command}`;
    }
  }

  function printOutput(command: string) {
    const result = executeCommand(command.trim());

    const newOutput = document.createElement('div');
    const prompt = document.createElement('span');
    prompt.innerText = `${PROMPT} ${command.trim()}`;

    newOutput.appendChild(prompt);

    const resultParagraph = document.createElement('p');
    resultParagraph.innerHTML = result;

    newOutput.appendChild(resultParagraph);

    history.appendChild(newOutput);
  }

  function moveCaret(caret: HTMLSpanElement, input: string) {
    caret.innerHTML = `${'&nbsp;'.repeat(input.length)}${CARET_SYMBOL}`;
  }

  input.onkeydown = (e) => {
    switch (e.key) {
      case 'Enter':
        e.preventDefault();

        if (input.value.trim() === 'clear') history.innerHTML = '';
        else printOutput(input.value.trim());

        clearTextArea(input);
        predictionBox.innerText = '';
        moveCaret(caret, '');
        break;

      case 'Tab':
        e.preventDefault();

        if (predictionBox.innerText.length !== 0)
          input.value = predictionBox.innerText;

        moveCaret(caret, input.value);
        break;
    }
  };

  input.oninput = (e) => {
    const isTextAreaEmpty = input.value.length <= 1;

    if (isTextAreaEmpty) predictionBox.innerText = '';
    else predictionBox.innerText = predictCommand(input.value);

    caret.innerHTML = `${'&nbsp;'.repeat(input.value.length)}${CARET_SYMBOL}`;
  };

  input.onblur = (e) => {
    input.focus();
  };
</script>
